{
	"title":"PPIs",
	"namespace":"http://www.isa.us.es/ppiontology/stencilsets/extensions/bpmnppi#",
	"description":"Adds definition of Process Performance Indicators to BPMN 2.0",
	"definition":"bpmnppi/bpmnppi.json",
	"extends":"http://b3mn.org/stencilset/bpmn2.0#",
	"propertyPackages": [
	    {
	        "name": "measureCommon",
	        "properties": [
                {
                    "id":"id",
                    "type":"String",
                    "title":"Id",
                    "value":"",
                    "description":"It uniquely identifies the measure definition.",
                    "readonly":false,
                    "optional":false,
                    "length":"50"
                },
                {
                    "id":"description",
                    "type":"String",
                    "title":"Description",
                    "value":"",
                    "description":"Describes the measure.",
                    "readonly":false,
                    "optional":true,
                    "length":""
                },
                {
                    "id":"name",
                    "type":"String",
                    "title":"Name",
                    "value":"",
                    "description":"The descriptive name of the measure.",
                    "readonly":false,
                    "optional":true,
                    "refToView":"text",
                    "length":""
                },
 				{
					"id":"scale",
					"type":"String",
					"title":"Scale",
					"value":"",
					"description":"It defines the measure domain (a set of values with defined properties).",
					"readonly":false,
					"optional":true
				},
				{
					"id":"unitOfMeasure",
					"type":"String",
					"title":"Unit of Measure",
					"value":"",
					"description":"It defines the unit of measure.",
					"readonly":false,
					"optional":true
				}
	        ]
	    },
	    {
	        "name": "timeMeasureProperties",
			"properties": [
				{
					"id":"timeMeasureType",
					"type":"Choice",
					"title":"Type",
					"value":"Linear",
					"description":"It defines the type of time measure when it is defined over elements within a loop.",
					"readonly":false,
					"items" : [
					        {
					          "id":"linearTimeMeasure",
					      	   "title":"Linear",
					      	   "value":"Linear",
					      	   "refToView":"linear"
					         },
					         {
					       	   "id":"CyclicTimeMeasure",
				        	   "title":"Cyclic",
				        	   "value":"Cyclic",
					      	   "refToView":"cyclic"
					          },
							],
					"optional":false
				},
				{
					"id":"singleInstanceAggFunction",
					"type":"Choice",
					"title":"Cycle aggregation",
					"value":"",
					"description":"It defines the aggregation function applied if TimeMeasureType is cyclic.",
					"readonly":false,
				    "items" : [
                        {
                          "id":"minimum",
                           "title":"Minimum",
                           "value":"Minimum",
                           "refToView":"mintime"
                         },
                         {
                           "id":"maximum",
                           "title":"Maximum",
                           "value":"Maximum",
                           "refToView":"maxtime"
                          },
                         {
                           "id":"average",
                           "title":"Average",
                           "value":"Average",
                           "refToView":"avgtime"
                          },
                         {
                           "id":"sum",
                           "title":"Sum",
                           "value":"Sum",
                           "refToView":"sumtime"
                          },
					],
					"optional":true
				}
			]
	    },
	    {
	        "name": "aggregatedCommon",
			"properties": [
				{
					"id":"aggregationFunction",
					"type":"Choice",
					"title":"Aggregation Function",
					"value":"",
					"description":"Function defined through the operators: maximum, minimum, average, sum or count to calculate the aggregated measure value.",
					"tooltip":"Choose the operator to calculate the measure value",
					"readonly":false,
					"items" : [
					        {
					          "id":"minimum",
					      	   "title":"Minimum",
					      	   "value":"Minimum",
					      	   "refToView":"minimum"
					         },
					         {
					       	   "id":"maximum",
				        	   "title":"Maximum",
				        	   "value":"Maximum",
				        	   "refToView":"maximum"
					          },
							 {
					           "id":"average",
					           "title":"Average",
					           "value":"Average",
					           "refToView":"average"
					          },
							 {
					       	   "id":"sum",
					       	   "title":"Sum",
					       	   "value":"Sum",
					       	   "refToView":"sum"
					          },
							],
					"width":80,
					"optional":false
				},
				{
					"id":"samplingFrequency",
					"type":"String",
					"title":"Sampling frequency",
					"value":"",
					"description":"This attribute defines the frequency of sampling.",
					"readonly":false,
					"optional":true,
					"length":""
				}
			]
	    },
	    {
	        "name": "stateAggregatedProperties",
			"properties": [
				{
					"id":"stateAggregationFunction",
					"type":"Choice",
					"title":"State Aggregation Function",
					"value":"",
					"description":"Function defined through the operators: change values to calculate the aggregated measure value.",
					"tooltip":"Choose one",
					"readonly":false,
					"items" : [
					        {
					          "id":"numberProcessInstance",
					      	   "title":"Number of Process Instance",
					      	   "value":"numberProcIns",
					      	   "refToView":"numberProcIns"
					         },
					         {
					       	   "id":"percentageProcessInstance",
				        	   "title":"Percentage of Process Instance",
				        	   "value":"percentageProcIns",
				        	   "refToView":"percentageProcIns"
					          },
							 {
					           "id":"allProcessInstance",
					           "title":"All Process Instance",
					           "value":"allProcIns",
					           "refToView":"allProcIns"
					          },
							 {
					       	   "id":"atLeastOneProcessInstance",
					       	   "title":"At Least One Process Instance",
					       	   "value":"atLeastOneProcIns",
					       	   "refToView":"atLeastOneProcIns"
					          },
					          {
					       	   "id":"noProcessInstance",
					       	   "title":"No Process Instance",
					       	   "value":"noProcIns",
					       	   "refToView":"noProcIns"
					          },
							],
					"width":80,
					"optional":false
				},
				{
					"id":"samplingFrequency",
					"type":"String",
					"title":"Sampling frequency",
					"value":"",
					"description":"This attribute defines the frequency of sampling.",
					"readonly":false,
					"optional":true,
					"length":""
				}
			]
	    },
	    {
	        "name": "derivedCommon",
			"properties": [
				{
					"id":"function",
					"type":"String",
					"title":"Function",
					"value":"",
					"description":"The mathematical function used to combine two or more instanceMeasures",
					"readonly":false,
					"optional":true,
					"refToView":"function"
				}
			]
	    },
	    {
	        "name": "appliesToElementProperties",
			"properties":[
				{
					"id":"when",
					"type":"Choice",
					"title":"State",
					"value":"Other",
					"description":"State of the element",
					"readonly":false,
					"optional":false,
					"items": [
						{
							"id":"start2",
							"title":"Start",
							"value":"Start",
							"refToView":["start2","endActivityWhite"]
						},
						{
							"id":"end2",
							"title":"End",
							"value":"End",
							"refToView":["end2","endActivityBlack"]
						},
						{
							"id":"otherPointInTime",
							"title":"Other",
							"value":"Other"
						}
					]
				},
				{
					"id":"state",
					"type":"String",
					"title":"BPMN State",
					"value":"",
					"description":"It defines the state the element must be in to be measured.",
					"readonly":false,
					"optional":false,
					"refToView":"stateText2"
				}
			]
	    },
	    {
	        "name": "dataContentProperties",
			"properties":[
				{
					"id":"dataContentSelection",
					"type":"String",
					"title":"DataContentSelection",
					"value":"",
					"description":"This attribute is used to define the specific part of the data object that has to be measured.",
					"readonly":false,
					"optional":false,
					"refToView":"dataContentSelectionText"
				},

			]
	    }

	],
	"stencils": [
		{
			"type": "node",
			"id":"ppi",
			"title":"PPI",
			"description":"It computes the actual value of the measure and has an associated target value",
			"groups":["PPI"],
			"view":"../../extensions/bpmnppi/view/clockppi.svg",
			"icon":"../../extensions/bpmnppi/icons/clockppi.png",
			"roles": [
				"fromtoall",
				"all",
				"ppiMorph"
			], 
			"properties": [	
				{
					"id":"id",
					"type":"String",
					"title":"Id",
					"value":"",
					"description":"It uniquely identify elements of the ppi extension.",
					"readonly":false,
					"optional":false,
					"length":"50",
					"refToView":"idPpi"
				},
				{
					"id":"name",
					"type":"String",
					"title":"Name",
					"value":"",
					"description":"The descriptive name of the PPI.",
					"readonly":false,
					"optional":true,
					"length":""
				},
				{
					"id":"description",
					"type":"String",
					"title":"Description",
					"value":"",
					"description":"A long description of the PPI.",
					"readonly":false,
					"optional":true,
					"length":""
				},	
				{
					"id":"goals",
					"type":"Complex",
					"title":"Goals",
					"value":"",
					"description":"Specifies the strategic or operational goals the PPI is related with.",
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
							"id":"goal",
							"name":"Goal",
							"type":"String",
							"value":"",
							"width": 400,
							"optional":false
						}
					]
				},		
				{
					"id":"target",
					"type":"Complex",
					"title":"Target",
					"value":"",
					"description":"Restriction that the value of a PPI must fulfill",
					"readonly":false,
					"optional":false,
					"popular": true,
					"complexItems": [
						{
							"id":"lowerBound",
							"name":"Lower bound",
							"type":"String",
							"value":"",
							"width":100,
							"optional":true
						},
						{
							"id":"upperBound",
							"name":"Upper bound",
							"type":"String",
							"value":"",
							"width":100,
							"optional":true
						},
						{
							"id":"groupedByValue",
							"name":"Grouped by",
							"type":"String",
							"value":"",
							"width":200,
							"optional":true
						}
					]
				},
				{
					"id":"lastInstancesScope",
					"type":"Integer",
					"title":"Last instances scope",
					"value":"",
					"description":"It indicates the subset of instances taken into account to calculate the PPI value.",
					"readonly":false,
					"popular": true,
					"optional":true
				},
				{
					"id":"timeScope",
					"type":"Complex",
					"title":"Time scope",
					"value":"",
					"description":"It indicates the subset of instances taken into account to calculate the PPI value.",
					"readonly":false,
					"optional":true,
					"popular": true,
					"complexItems": [
						{
							"id":"scopePeriod",
							"name":"Period",
							"type":"Choice",
							"value":"",
							"width":100,
							"optional":false,
							"items": [
                                {
                                    "id":"dailyScope",
                                    "title":"Daily",
                                    "value":"daily"
                                },
                                {
                                    "id":"weeklyScope",
                                    "title":"Weekly",
                                    "value":"weekly"
                                },
                                {
                                    "id":"monthlyScope",
                                    "title":"Monthly",
                                    "value":"monthly"
                                },
                                {
                                    "id":"yearlyScope",
                                    "title":"Yearly",
                                    "value":"yearly"
                                }
							]
						},
						{
							"id":"frequencyScope",
							"name":"Frequency",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false
						},
						{
							"id":"relativeScope",
							"name":"Relative",
							"type":"Boolean",
							"value":"",
							"width":100,
							"optional":false
						}
					]
				},
				{
					"id":"source",
					"type":"String",
					"title":"Source",
					"value":"",
					"description":"Identifies the source of the values of the PPI",
					"readonly":false,
					"optional":true,
					"length":""
				},
				{
					"id":"responsible",
					"type":"String",
					"title":"Responsible",
					"value":"",
					"description":"This attribute is used to describe the human resource in charge of the PPI.",
					"readonly":false,
					"optional":true,
					"length":""
				},
				{
					"id":"informed",
					"type":"Complex",
					"title":"Informed",
					"value":"",
					"description":"This attribute is used to describe the human resource interested in the PPI.",
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
							"id":"inform",
							"name":"Informed",
							"type":"String",
							"value":"",
							"width":200,
							"optional":false
						}
					]
				},
				{
					"id":"comments",
					"type":"String",
					"title":"Comments",
					"value":"",
					"description":"This attribute is used for any additional information.",
					"readonly":false,
					"optional":true,
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"timeMeasure",
			"title":"Time Measure",
			"description":"It measures the duration between two instants (start and end) in a process instance.",
			"groups":["BaseMeasure"],
			"view":"../../extensions/bpmnppi/view/timeMeasure.svg",
			"icon":"../../extensions/bpmnppi/icons/timeMeasure.png",
            "propertyPackages" : ["measureCommon", "timeMeasureProperties"],
			"roles": [
				"fromtoall",
				"all",
				"baseMeasureMorph",
				"timeMeasures",
				"instanceMeasure"
			],
			"properties": [
			]
		},
		{
			"type": "node",
			"id":"countMeasure",
			"title":"Count Measure",
			"description":"It counts the number of times a certain timeInstantCondition is met.",
			"groups":["BaseMeasure"],
			"view":"../../extensions/bpmnppi/view/countMeasure.svg",
			"icon":"../../extensions/bpmnppi/icons/countMeasure.png",
            "propertyPackages" : ["measureCommon"],
			"roles": [
				"fromtoall",
				"all",
				"baseMeasureMorph",
				"countMeasures",
				"instanceMeasure",
				"appliesToElementMeasure"
			],
			"properties": [
			]
		},
		{
			"type": "node",
			"id":"stateConditionMeasure",
			"title":"State Condition Measure",
			"description":"It checks whether a flow element's instance is currently in execution (its statusor state).",
			"groups":["BaseMeasure"],
			"view":"../../extensions/bpmnppi/view/stateConditionMeasure.svg",
			"icon":"../../extensions/bpmnppi/icons/stateConditionMeasure.png",
            "propertyPackages" : ["measureCommon"],
			"roles": [
				"fromtoall",
				"all",
				"baseMeasureMorph",
				"stateConditionMeasures",
				"appliesToElementMeasure",
				"instanceMeasure"
			],
			"properties": [
			]
		},
		{
			"type": "node",
			"id":"dataPropertyConditionMeasure",
			"title":"Data Property Condition Measure",
			"description":"It checks certain conditions (e.g. states or restriction related to a property) over Data Objects' instances.",
			"groups":["BaseMeasure"],
			"view":"../../extensions/bpmnppi/view/dataPropertyConditionMeasure.svg",
			"icon":"../../extensions/bpmnppi/icons/dataPropertyConditionMeasure.png",
            "propertyPackages" : ["measureCommon"],
			"roles": [
				"fromtoall",
				"all",
				"baseMeasureMorph",
				"dataMeasures",
				"appliesToDataMeasure",
				"instanceMeasure"
			],
			"properties": [
			]
		},
		
		{
			"type": "node",
			"id":"dataMeasure",
			"title":"Data Measure",
			"description":"It measures certain properties contained in a dataObject's instance that this measure is related to",
			"groups":["BaseMeasure"],
			"view":"../../extensions/bpmnppi/view/dataMeasure.svg",
			"icon":"../../extensions/bpmnppi/icons/dataMeasure.png",
            "propertyPackages" : ["measureCommon"],
			"roles": [
				"fromtoall",
				"all",
				"baseMeasureMorph",
				"dataMeasures",
				"appliesToDataMeasure",
				"instanceMeasure"
			],
			"properties": [
			]
		},
		
		{
			"type": "node",
			"id":"aggregatedMeasureGeneric", 
			"title":"Aggregated Measure",
			"description":"It aggregates values of InstanceMeasures contained in the analysis period through an aggregation function",
			"groups":["AggregatedMeasure"],
			"view":"../../extensions/bpmnppi/view/aggregatedMeasure.svg",
			"icon":"../../extensions/bpmnppi/icons/aggregatedMeasure.png",
            "propertyPackages" : ["measureCommon", "aggregatedCommon"],
			"roles": [
				"fromtoall",
				"all",
				"aggregatedMeasureDerivedRole",
				"aggregatedMeasure",
			], 

			"properties": [	
			]
		},
				
		{
			"type": "node",
			"id":"timeAggregatedMeasure",
			"title":"Time Aggregated Measure",
			"description":"It aggregates values of TimeMeasures contained in the analysis period through an aggregation function",
			"groups":["AggregatedMeasure"],
			"view":"../../extensions/bpmnppi/view/timeAggregatedMeasure.svg",
			"icon":"../../extensions/bpmnppi/icons/timeAggregatedMeasure.png",
            "propertyPackages" : ["measureCommon", "aggregatedCommon", "timeMeasureProperties"],
			"roles": [
				"fromtoall",
				"all",
				"aggregatedMeasure",
				"timeMeasures",
				"processMeasure"
			], 

			"properties": [	
			]
		},
		{
			"type": "node",
			"id":"countAggregatedMeasure",
			"title":"Count Aggregated Measure",
			"description":"It aggregates values of CountMeasures contained in the analysis period through an aggregation function",
            "propertyPackages" : ["measureCommon", "aggregatedCommon"],
			"groups":["AggregatedMeasure"],
			"view":"../../extensions/bpmnppi/view/countAggregatedMeasure.svg",
			"icon":"../../extensions/bpmnppi/icons/countAggregatedMeasure.png",
			"roles": [
				"fromtoall",
				"all",
				"aggregatedMeasure",
				"countMeasures",
				"appliesToElementMeasure",
				"processMeasure"
			], 

			"properties": [	
			]
		},
		{
			"type": "node",
			"id":"stateConditionAggregatedMeasure",
			"title":"State Condition Aggregated Measure",
			"description":"It aggregates values of stateConditionMeasures contained in the analysis period through an aggregation function",
			"groups":["AggregatedMeasure"],
			"view":"../../extensions/bpmnppi/view/stateConditionAggregatedMeasure.svg",
			"icon":"../../extensions/bpmnppi/icons/stateConditionAggregatedMeasure.png",
            "propertyPackages" : ["measureCommon", "stateAggregatedProperties"],
			"roles": [
				"fromtoall",
				"all",
				"aggregatedMeasure",
				"stateConditionMeasures",
				"appliesToElementMeasure",
				"processMeasure"
			], 

			"properties": [	
			]
		},
		{
			"type": "node",
			"id":"dataPropertyConditionAggregatedMeasure",
			"title":"Data Property Condition Aggregated Measure",
			"description":"It aggregates values of dataPropertyConditionMeasures contained in the analysis period through an aggregation function.",
			"groups":["AggregatedMeasure"],
			"view":"../../extensions/bpmnppi/view/dataPropertyConditionAggregatedMeasure.svg",
			"icon":"../../extensions/bpmnppi/icons/dataPropertyConditionAggregatedMeasure.png",
            "propertyPackages" : ["measureCommon", "aggregatedCommon"],
			"roles": [
				"fromtoall",
				"all",
				"aggregatedMeasure",
				"dataMeasures",
				"processMeasure",
				"appliesToDataMeasure"
			], 
			"properties": [
			]
		},
		{
			"type": "node",
			"id":"dataAggregatedMeasure",
			"title":"Data Aggregated Measure",
			"description":"It aggregates values of DataMeasures contained in the analysis period through an aggregation function",
			"groups":["AggregatedMeasure"],
			"view":"../../extensions/bpmnppi/view/dataAggregatedMeasure.svg",
			"icon":"../../extensions/bpmnppi/icons/dataAggregatedMeasure.png",
            "propertyPackages" : ["measureCommon", "aggregatedCommon"],
			"roles": [
				"fromtoall",
				"all",
				"aggregatedMeasure",
				"dataMeasures",
				"appliesToDataMeasure",
				"processMeasure"
			], 

			"properties": [	
			]
		},
		{
			"type": "node",
			"id":"derivedSingleInstanceMeasure",
			"title":"Derived Single-Instance Measure",
			"description":"It is defined as a function of two or more base and/or composed measures",
			"groups":["DerivedMeasure"],
			"view":"../../extensions/bpmnppi/view/derivedSingleInstanceMeasure.svg",
			"icon":"../../extensions/bpmnppi/icons/derivedSingleInstanceMeasure.png",
            "propertyPackages" : ["measureCommon", "derivedCommon"],
			"roles": [
				"fromtoall",
				"all",
				"derivedMeasuresMorph",
				"instanceMeasure",
			], 
			"properties": [		
			]
		},
		
		{
			"type": "node",
			"id":"derivedMultiInstanceMeasure",
			"title":"Derived Multi-Instance Measure",
			"description":"It is defined as a function of two or more ProcessMeasures",
			"groups":["DerivedMeasure"],
			"view":"../../extensions/bpmnppi/view/derivedMultiInstanceMeasure.svg",
			"icon":"../../extensions/bpmnppi/icons/derivedMultiInstanceMeasure.png",
            "propertyPackages" : ["measureCommon", "derivedCommon"],
			"roles": [
				"fromtoall",
				"all",
				"derivedMeasuresMorph",
				"processMeasure"
			], 
			"properties": [		
			]
		},
		
		
		
	
	//Edges
	
		{
			"type": "edge",
			"id":"TimeConnector",
			"title":"Time connector",
			"description":"Time connector shows the flowelement that opens or close the measured timed period in a TimeMeasure.",
			"groups":["PPI Connectors"],
			"view":"../../extensions/bpmnppi/view/timeConnector.svg",
			"icon":"../../extensions/bpmnppi/icons/timeConnector.png",
            "propertyPackages" : ["appliesToElementProperties"],
			"roles": [ //revisar
				"all",
				"ConnectorsMorph"
			],
			"properties":[
				{
					"id":"ConditionType",
					"type":"Choice",
					"title":"Connector Type",
					"value":"From",
					"description":"This attribute determines the type of the time connector.",
					"readonly":false,
					"optional":false,
					"items": [
						{
							"id":"from",
							"title":"From",
							"value":"From",
							"refToView":["from","startmeasurewhite"]
						},
						{
							"id":"to",
							"title":"To",
							"value":"To",
							"refToView":["to","startmeasureblack"]
						}
					]
				}
			]
		},
		
		{
			"type": "edge",
			"id":"appliesToElementConnector",
			"title":"Applies To Element",
			"description":"Defines the connection of the PPI to the BPMN flowelement, in the case of CountMeasure or StateConditionMeasure",
			"groups":["PPI Connectors"],
			"view":"../../extensions/bpmnppi/view/appliesToElementConnector.svg",
			"icon":"../../extensions/bpmnppi/icons/appliesToElementConnector.png",
            "propertyPackages" : ["appliesToElementProperties"],
			"roles": [ //revisar
				"all",
				"ConnectorsMorph"
			],
			"properties":[
			]
		},
		{
			"type": "edge",
			"id":"appliesToDataConnector",
			"title":"Applies To Data",
			"description":"Defines the connection of the PPI to the BPMN flowelement, in the case of DataPropertyConditionMeasure or DataMeasure",
			"groups":["PPI Connectors"],
			"view":"../../extensions/bpmnppi/view/appliesToDataConnector.svg",
			"icon":"../../extensions/bpmnppi/icons/appliesToDataConnector.png",
            "propertyPackages" : ["dataContentProperties"],
			"roles": [ //revisar
				"all",
				"ConnectorsMorph"
			],
			"properties":[
				{
					"id":"restriction",
					"type":"String",
					"title":"Restriction",
					"value":"",
					"description":"This attribute is used to specify the restriction certain Data property must fulfill.",
					"readonly":false,
					"optional":true,
					"refToView":"restrictionText" 
				},
				{
					"id":"state",
					"type":"String",
					"title":"State",
					"value":"",
					"description":"It defines the state the element must be in to be measured.",
					"readonly":false,
					"optional":false,
					"refToView":"stateText3"
					
				}
			]
		},
		{
			"type": "edge",
			"id":"aggregates",
			"title":"Aggregates",
			"description":"Defines the connection of the AggregatedMeasure to the measure derivedSingleInstanceMeasure or baseMeasure",
			"groups":["PPI Connectors"],
			"view":"../../extensions/bpmnppi/view/aggregates.svg",
			"icon":"../../extensions/bpmnppi/icons/aggregates.png",
			"roles": [ //revisar
				"all",
				"ConnectorsMorph"
			],
			"properties":[
			],
		},
		{
			"type": "edge",
			"id":"isGroupedBy",
			"title":"Is Grouped By",
			"description":"Connects to the element whose condition is used to group an AggregatedMeasure.",
			"groups":["PPI Connectors"],
			"view":"../../extensions/bpmnppi/view/isGroupedBy.svg",
			"icon":"../../extensions/bpmnppi/icons/isGroupedBy.png",
            "propertyPackages" : ["dataContentProperties"],
			"roles": [
				"all",
				"ConnectorsMorph"
			],
			"properties":[
			]
		},
		
		{
			"type": "edge",
			"id":"uses",
			"title":"Uses",
			"description":"Defines the connection of a DerivedMeasure with the base or aggergatedMeasures that combines in its function.",
			"groups":["PPI Connectors"],
			"view":"../../extensions/bpmnppi/view/usesConnector.svg",
			"icon":"../../extensions/bpmnppi/icons/usesConnector.png",
			"roles": [ 
				"all",
				"ConnectorsMorph"
			],
			"properties":[
				{
					"id":"variable",
					"type":"String",
					"title":"Variable",
					"value":"",
					"description":"It defines the variable with which the measure that is target of this connector is defined in the corresponding function.",
					"tooltip":"Write the variable in brackets.",
					"readonly":false,
					"optional":false,
					"length":"",
					"refToView":"variable"
				}
			],
		}	
	],
	
	//Rules
	
	"rules": {
		"connectionRules": [
			{
				"role" : "Association_Undirected",
				"connects" : [
					{
						"from" : "fromtoall",
						"to" : ["ppi"]
					},
					{
						"from" : "ppi",
						"to" : "fromtoall"
					},
					{
						"from" : "fromtoall",
						"to" : ["ppiexpanded"]
					},
					{
						"from" : "ppiexpanded",
						"to" : "fromtoall"
					}
					
				]
			},
			{
				"role" : "TimeConnector",
				"connects" : [
					{
						"from" : "timeMeasures",
						"to" : ["ActivitiesMorph"]
					},
					{
						"from" : "timeMeasures",
						"to" : ["EventActivitiesMorph"]
					},
					{
						"from" : "timeMeasures",
						"to" : ["Pool"]
					},
					{
						"from" : "timeMeasures",
						"to" : ["CollapsedPool"]
					},
					{
						"from" : "timeMeasures",
						"to" : ["DataObject"]
					},
					{
						"from" : "timeMeasures",
						"to" : ["Startevents_all"]
					},
					{
						"from" : "timeMeasures",
						"to" : ["IntermediateEventsMorph"]
					},
					{
						"from" : "timeMeasures",
						"to" : ["EndEventsMorph"]
					}
					
				]
			},
			{
				"role" : "appliesToElementConnector",
				"connects" : [
				//De countMeasures a todos los elementos a los que se le puede medir una TimeInstantCondition (como en TimeConnector)
					{
						"from" : "countMeasures",
						"to" : ["ActivitiesMorph"] //incluye task, CollapsedSubprocess y Subprocess
					},
					{
						"from" : "countMeasures",
						"to" : ["EventActivitiesMorph"] //incluye CollapsedEventSubprocess y EventSubprocess
					},
					{
						"from" : "countMeasures",
						"to" : ["Pool"]
					},
					{
						"from" : "countMeasures",
						"to" : ["CollapsedPool"]
					},
					{
						"from" : "countMeasures",
						"to" : ["DataObject"]
					},
					{
						"from" : "countMeasures",
						"to" : ["Startevents_all"]
					},
					{
						"from" : "countMeasures",
						"to" : ["IntermediateEventsMorph"]
					},
					{
						"from" : "countMeasures",
						"to" : ["EndEventsMorph"]
					},
					// De stateConditionMeasures a todos los elementos de flujo con estado
					{
						"from" : "stateConditionMeasures",
						"to" : ["ActivitiesMorph"] //incluye task, CollapsedSubprocess y Subprocess
					},
					{
						"from" : "stateConditionMeasures",
						"to" : ["EventActivitiesMorph"]  //incluye CollapsedEventSubprocess y EventSubprocess
					},
					{
						"from" : "stateConditionMeasures",
						"to" : ["Pool"]
					},
					{
						"from" : "stateConditionMeasures",
						"to" : ["CollapsedPool"]
					},
					{
						"from" : "stateConditionMeasures",
						"to" : ["DataObject"]
					},
					{
						"from" : "stateConditionMeasures",
						"to" : ["DataStore"]
					},
					{
						"from" : "stateConditionMeasures",
						"to" : ["Message"]
					}
				]
			},
			
			{					
				"role" : "appliesToDataConnector",
				"connects" : [
				//De las DataMeasures (tb DataConditionMeasure) a todos los elemenetos de datos (DataObjects, DataStores y Messages), es correcto?
					{
						"from" : "dataMeasures",
						"to" : ["DataObjectMorph"] //incluye DataObjects, DataStores y Messages
					},		
				]
			},

			{
				"role" : "isGroupedBy",
				"connects" : [
					{
						"from" : "aggregatedMeasure",
						"to" : ["DataObject"]
					},
					{
						"from" : "aggregatedMeasure",
						"to" : ["DataStore"]
					},
					{
						"from" : "aggregatedMeasure",
						"to" : ["Message"]
					}
				]
			},
			
			{
				"role" : "aggregates",
				"connects" : [
					{
						"from" : "aggregatedMeasureGeneric",
						"to" : ["instanceMeasure"] 
					},
					{
						"from" : "aggregatedMeasureGeneric",
						"to" : ["derivedSingleInstanceMeasure"] 
					},
					{
						"from" : "aggregatedMeasureGeneric",
						"to" : ["baseMeasure"] 
					},
					
				]
			},
			

			{
				"role" : "uses",
				"connects" : [
					{
						"from" : "derivedSingleInstanceMeasure",
						"to" : ["instanceMeasure"] 
					},
					{
						"from" : "derivedMultiInstanceMeasure",
						"to" : ["processMeasure"] 
					}
				]
			}
		],
        "cardinalityRules": [
        	{
				"role":"timeMeasures",
				"maximumOccurrence": undefined,
				"outgoingEdges": [
					{
						"role":"TimeConnector",
						"minimum":1
						
					}
				]
			},
			{
				"role":"appliesToElementMeasure",
				"maximumOccurrence":undefined,
				"outgoingEdges": [
					{
						"role":"appliesToElementConnector",
						"maximum":1
						
					}
				]
			},
			{
				"role":"appliesToDataMeasure",
				"maximumOccurrence":undefined,
				"outgoingEdges": [
					{
						"role":"appliesToDataConnector",
						"maximum":1
						
					}
				]
			},
			{
				"role":"aggregatedMeasureDerivedRole",
				"maximumOccurrence":undefined,
				"outgoingEdges": [
					{
						"role":"aggregates",
						"maximum":1
						
					}
				]
			}
			
			//falta confirmar que no hay que escribir cardinalityrules para outgoingEdges en aggregatedMeasure (para el isGroupedBy)
			//falta confirmar que no hay que escribir cardinalityrules para ingoingEdges en measures (para el uses que sale de las derivedMeasures)
        ],
        
		"containmentRules": [
			{
				"role":"ppi",
				"contains":[
					"instanceMeasure",
					"processMeasure",
					"aggregatedMeasureGeneric"
				]
			},
			{
				"role":"ppiexpanded",
				"contains":[
					"instanceMeasure",
					"processMeasure",
					"aggregatedMeasureGeneric"
				]
			},
			
		],
		"morphingRules": [
			{
				"role": "baseMeasureMorph",
				"baseMorphs": ["timeMeasure"] 
			},
			{
				"role": "aggregatedMeasure",
				"baseMorphs": ["timeAggregatedMeasure"] 
			},
			{
				"role": "derivedMeasuresMorph",
				"baseMorphs": ["derivedSingleInstanceMeasure"] 
			},
			
			{
				"role": "ppiMorph",
				"baseMorphs": ["ppi"]
			},
			{
				"role": "ConnectorsMorph",
				"baseMorphs": ["timeConnector"] 
			}
		]
	}
}